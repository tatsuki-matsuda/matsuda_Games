//-------------------------------------------------------------------------------
//
// ゲーム制作[light.cpp]
// Author:Tatsuki Matsuda
//
//-------------------------------------------------------------------------------
#include"light.h"		//ゲーム画面
#include"manager.h"		//マネージャー

//*****************************************************************************
// 静的メンバ変数の初期化
//*****************************************************************************

//*****************************************************************************
// コンストラクタ
//*****************************************************************************
CLight::CLight()
{

}

//*****************************************************************************
// デストラクタ
//*****************************************************************************
CLight::~CLight()
{

}

//*****************************************************************************
// 初期化処理
//*****************************************************************************
HRESULT CLight::InitLight(void)
{
	//デバイスの設定
	LPDIRECT3DDEVICE9 pDevice;
	pDevice = CManager::GetRenderer()->GetDevice();

	//デバイスの取得
	D3DXVECTOR3	VecDir;							//設定用方向ベクトル

	//ライトをクリアする
	ZeroMemory(&m_aLight, sizeof(D3DLIGHT9));

	for (int nCntLight = 0; nCntLight < 3; nCntLight++)
	{
		//ライトの種類を設定
		m_aLight[nCntLight].Type = D3DLIGHT_DIRECTIONAL;

		//ライトの拡散光を設定
		m_aLight[nCntLight].Diffuse = D3DXCOLOR(1.0, 1.0, 1.0, 1.0);

		//ライトの方向を設定
		VecDir = D3DXVECTOR3(0.2f, 0.0f, -0.9f);
		VecDir = D3DXVECTOR3(0.2f, -0.8f, 0.7f);
		//VecDir = D3DXVECTOR3(0.2f, 0.0f, 0.7f);

		D3DXVec3Normalize(&VecDir, &VecDir);
		m_aLight[nCntLight].Direction = VecDir;

		//リライトを設定する
		pDevice->SetLight(nCntLight, &m_aLight[nCntLight]);

		//ライトを有効にする
		pDevice->LightEnable(nCntLight, TRUE);
	}

	return S_OK;
}

//*****************************************************************************
// 終了処理
//*****************************************************************************
void CLight::UninitLight(void)
{
}

//*****************************************************************************
// 更新処理
//*****************************************************************************
void CLight::UpdateLight(void)
{

}


//*****************************************************************************
// ライトの設定
//*****************************************************************************
void CLight::SetLight(void)
{
	//デバイスの設定
	LPDIRECT3DDEVICE9 pDevice;
	pDevice = CManager::GetRenderer()->GetDevice();
}
