////=============================================================================
////
//// メイン処理 [choice.cpp]
//// Author : Tatsuki Matsuda 
////
////=============================================================================
//#include "game.h"
//#include "choice.h"
//#include "manager.h"
//#include "scene.h"
//#include "renderer.h"
//#include "dinput_keyboard.h"
//
////*****************************************************************************
//// 静的メンバ変数の初期化
////*****************************************************************************
//
////*****************************************************************************
//// コンストラクタ
////*****************************************************************************
//CChoice::CChoice(int nPriority) :CScene2D(nPriority)
//{
//
//}
//
////*****************************************************************************
//// デストラクタ
////*****************************************************************************
//CChoice::~CChoice()
//{
//
//}
//
////*****************************************************************************
//// 初期化処理
////*****************************************************************************
//HRESULT CChoice::Init(D3DXVECTOR3 pos, D3DXVECTOR3 scale)
//{
//
//	//初期化の呼び出し
//	CScene2D::Init(pos, scale);
//
//	m_nCnt = 0;
//
//	//値を返す
//	return S_OK;
//}
//
////*****************************************************************************
//// 終了処理
////*****************************************************************************
//void CChoice::Uninit(void)
//{
//	//終了の呼び出し
//	CScene2D::Uninit();
//}
//
////*****************************************************************************
//// 更新処理
////*****************************************************************************
//void CChoice::Update(void)
//{
//	//キーボード―情報の取得
//	CInputKeyBoard *pInputKeyboard;
//	pInputKeyboard = CManager::GetInputKeyBoard();
//
//	//位置の取得
//	D3DXVECTOR3 pos;
//	pos = GetPosition();
//
//	if (m_nCnt < 0)
//	{
//		m_nCnt = 2;
//
//		pos.y +=200;
//
//	}
//
//	if (m_nCnt >= 3)
//	{
//		m_nCnt = 0;
//
//		pos.y = 400;
//
//	}
//
//	//上キー押した場合
//	if (pInputKeyboard->GetTrigger(DIK_UP) == true)
//	{
//		m_nCnt--;
//	}
//
//	//下キー押した場合
//	if (pInputKeyboard->GetTrigger(DIK_DOWN) == true)
//	{
//		m_nCnt++;
//	}
//
//}
//
////*****************************************************************************
//// 描画処理
////*****************************************************************************
//void CChoice::Draw(void)
//{
//	//描画の呼び出し
//	CScene2D::Draw();
//}
//
////*****************************************************************************
//// テクスチャ読み込み処理
////*****************************************************************************
//void CChoice::Load(void)
//{
//	//デバイスの設定
//	LPDIRECT3DDEVICE9 pDevice;
//	pDevice = CManager::GetRenderer()->GetDevice();
//
//	//テクスチャの読み込み
//	D3DXCreateTextureFromFile(pDevice, "data\\TEXTURE\\enemy000.png", &m_pTexture);
//}
//
////*****************************************************************************
////*****************************************************************************
//// テクスチャ破棄処理
//void CChoice::Unload(void)
//{
//	//テクスチャの開放
//	if (m_pTexture != NULL)
//	{
//		m_pTexture->Release();
//		m_pTexture = NULL;
//	}
//}